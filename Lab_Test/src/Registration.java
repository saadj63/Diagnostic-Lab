
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Saad_BAD
 */
public class Registration extends javax.swing.JFrame {

 public void reset()
        {
            Patient_Name_Textbox.setText("");
           Patient_Name_Textbox.setText("");
           Age_Textbox.setText("");
           City_Textbox.setText("");
           Gender_Combobox.setSelectedIndex(0);
           Contact_No_Textbox.setText("");
         Refered_Combobox.setSelectedIndex(0);
         Ultrasonography_List.clearSelection();
         Radiography_List.clearSelection();
        }
   /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
        {
 
            
             
     String q;
        
                  String Username="root";
       String password="root123";
                   q = "Select Doctor_Name from doctor";
       String url = "jdbc:mysql://localhost:3306/lab";
          try{
              Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con=DriverManager.getConnection(url,Username,password);
        PreparedStatement pst=con.prepareStatement(q);
        String u="Ultrasonography";
      // pst.setString(1,t1.getText());
       //pst.setString(2, t2.getText());
       // pst.setString(3,u);
       ResultSet rs= pst.executeQuery();
       tab.setModel(DbUtils.resultSetToTableModel(rs));
    
       
                
          }catch(   ClassNotFoundException | SQLException e){
          
          System.out.println(e);
          }
             
          
            
            Ultrasonography_List.setVisible(false);  
Radiography_List.setVisible(false);
    Date date=new Date();

String dateStr2=new Timestamp(date.getTime()).toString();

Date_Textbox.setText(dateStr2.substring(0,10));
Patient_Name_Textbox.requestFocus();
            
        //    String Username="root";
       // String password="root123";
     //String url = "jdbc:mysql://localhost:3306/lab";
          try{
              Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn=DriverManager.getConnection(url,Username,password);

     String  q1="select Doctor_Name from doctor";
     PreparedStatement pst1=null;
   pst1 =conn.prepareStatement(q1); 
    ResultSet rs1=pst1.executeQuery();
          while(rs1.next())
          {
              Refered_Combobox.addItem(rs1.getString("Doctor_Name"));
          }
          }catch(ClassNotFoundException | SQLException e)
    {
    System.out.println(e);
    }
      
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jCheckBox1 = new javax.swing.JCheckBox();
        Doctor_Registration = new javax.swing.JFrame();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jFrame1 = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        m = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Age_Textbox = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        City_Textbox = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Refered_Combobox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Patient_Name_Textbox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Contact_No_Textbox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        c1 = new javax.swing.JCheckBox();
        c2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Ultrasonography_List = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        Radiography_List = new javax.swing.JList<>();
        Gender_Combobox = new javax.swing.JComboBox<>();
        Date_Textbox = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        Doctor_Registration.setMinimumSize(new java.awt.Dimension(400, 300));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton5.setText("Submit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Reset");

        jLabel9.setText("Doctor Name");

        jButton7.setText("Modify Doctor");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Doctor_RegistrationLayout = new javax.swing.GroupLayout(Doctor_Registration.getContentPane());
        Doctor_Registration.getContentPane().setLayout(Doctor_RegistrationLayout);
        Doctor_RegistrationLayout.setHorizontalGroup(
            Doctor_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Doctor_RegistrationLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(Doctor_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5)
                    .addComponent(jLabel9))
                .addGroup(Doctor_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Doctor_RegistrationLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButton6)
                        .addGap(40, 40, 40)
                        .addComponent(jButton7))
                    .addGroup(Doctor_RegistrationLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        Doctor_RegistrationLayout.setVerticalGroup(
            Doctor_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Doctor_RegistrationLayout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(Doctor_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(Doctor_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(69, 69, 69))
        );

        jFrame1.setMinimumSize(new java.awt.Dimension(400, 400));

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tab);

        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });

        jButton8.setText("Modify");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Delete");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton8)
                .addGap(27, 27, 27)
                .addComponent(jButton9)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registration");
        setBackground(new java.awt.Color(27, 15, 32));

        jPanel1.setBackground(new java.awt.Color(27, 15, 32));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 700));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 700));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Gender");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Pateints Name ");

        Refered_Combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refered_ComboboxActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("City");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Age");

        Patient_Name_Textbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Patient_Name_TextboxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registration");

        Contact_No_Textbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Contact_No_TextboxActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact No");

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Refered  By");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Type of Test");

        c1.setForeground(new java.awt.Color(255, 255, 255));
        c1.setText("Ultrasonograpgy");
        c1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c1ItemStateChanged(evt);
            }
        });
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        c2.setForeground(new java.awt.Color(255, 255, 255));
        c2.setText("RadioGraphy");
        c2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c2ItemStateChanged(evt);
            }
        });

        Ultrasonography_List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Upper Abdomen", "Whole Abdomen", "KUB", "Pelvis", "Follicular Monitoring", "Viability Scan", "NT Scan (11 to 14 weeks)", "Anomaly Scan", "Fetal Echocardiograpahy", "Growth Scan", "BioPhysical Profile", "Color Doppler", "3D-4D", "Shoulder", "Knee", "Ankle", "Wrist", "FNAC or Biopsy", "Aspiration or Tapping ", "Transcranial USG", "B Scan ", "Neck or Thyroid", "Chest", "Breast", "Inguinal Region", "Scrotum", "Trus", "Carotid", "Portal", "Renal", "Scrotal", "Peripheral Artery (R)-UL or LL", "Peripheral Artery (L)-UL or LL", "Peripheral Vein (R)-UL or LL", "Peripheral Vein (L)-UL or LL", "Other" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Ultrasonography_List.setToolTipText("Select Test");
        jScrollPane1.setViewportView(Ultrasonography_List);

        Radiography_List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Chest PA", "Chest PA & LA", "Abodemen(Erect)", "KUB", "Nasophraynx or PNS", "Skull", "Spine(C or D or L or S or C)", "Hand AP", "Hand AP & LAT", "Wrist AP", "Wrist AP & LAT", "Forearm AP", "Forearm AP & LAT", "Elbow AP", "Elbow AP & LAT", "Shoulder AP", "Shoulder AP &  LAT", "Humerus AP  ", "Humerus AP & LAT", "PBH AP", "PBH AP & LAT", "Hip AP", "Hip AP & LAT", "Femur AP ", "Femur AP & LAT", "Knee AP", "Knee AP & LAT", "Tibia or  Fibula AP", "Tibia or Fibula AP & LAT", "Ankle AP & LAT", "Foot AP", "Foot AP & LAT", "IVP", "RGU", "MCU", "Other" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Radiography_List.setToolTipText("Select Test");
        jScrollPane2.setViewportView(Radiography_List);

        Gender_Combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        Gender_Combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gender_ComboboxActionPerformed(evt);
            }
        });

        Date_Textbox.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        Date_Textbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_TextboxActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Date");

        jButton3.setText("Add Doctor");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Home");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(City_Textbox)
                            .addComponent(Gender_Combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contact_No_Textbox, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Age_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Date_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(227, 227, 227)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Patient_Name_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(121, 121, 121)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Refered_Combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(200, 200, 200))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Age_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Gender_Combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contact_No_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(City_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Date_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Patient_Name_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Refered_Combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3)))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(c1)
                                        .addComponent(c2))))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(175, 175, 175))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
reset();

// TODO adred your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Refered_ComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refered_ComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Refered_ComboboxActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void c1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c1ItemStateChanged
Ultrasonography_List.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_c1ItemStateChanged

    private void c2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c2ItemStateChanged
Radiography_List.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_c2ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String Username="root";
        String password="root123";
        String q = "Insert into patient(Date,Patients_Name,Age,City,Gender,Contact_No,Refered_By,Type_of_Test,Ultrasonography_Test,Radiography_Test,Price)values(?,?,?,?,?,?,?,?,?,?,?)";
        String url = "jdbc:mysql://localhost:3306/lab";
          try{
              Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con=DriverManager.getConnection(url,Username,password);
         if(Patient_Name_Textbox.getText().trim().isEmpty())
           {
            JOptionPane.showMessageDialog(null,"Enter Patients Name");
           }
         else if(Age_Textbox.getText().trim().isEmpty())
         {
            JOptionPane.showMessageDialog(null,"Enter Age");  
         }
          else if(City_Textbox.getText().trim().isEmpty())
         {
            JOptionPane.showMessageDialog(null,"Enter City");  
         }
         
         else if(Contact_No_Textbox.getText().trim().isEmpty())
         {
            JOptionPane.showMessageDialog(null,"Enter Contact No");  
         }
        
         else
         {
         
           PreparedStatement pst=con.prepareStatement(q);
           pst.setString(1,Date_Textbox.getText());
           pst.setString(2,Patient_Name_Textbox.getText().toUpperCase());
           
           pst.setInt(3,Integer.parseInt(Age_Textbox.getText()));
           pst.setString(4,City_Textbox.getText().toUpperCase());
           pst.setString(5,Gender_Combobox.getSelectedItem().toString());
           pst.setString(6,Contact_No_Textbox.getText());
         pst.setString(7,Refered_Combobox.getSelectedItem().toString());
       
         
         boolean b=c1.isSelected();
         boolean b1=c2.isSelected();
         
         if(b==true && b1==false)
          {
             String s="Ultrasonography";
           pst.setString(8,s);
                   }
          else if (b1==true && b==false)
           {
            String   s="Radiography";
               pst.setString(8,s);
               
                   }
          else if(b==true && b1==true)
          {
              String s="Ultrasonography and RadioGraphy";
              pst.setString(8, s);
          }
          else
          {
              JOptionPane.showMessageDialog(null,"No test Selected");
          }
                  List<String> l=Ultrasonography_List.getSelectedValuesList();
                  
          pst.setString(9,l.toString());
          
          List <String> l1=Radiography_List.getSelectedValuesList();
         pst.setString(10,l1.toString());
      if( Radiography_List.isSelectionEmpty())
      {
       
        int index_of_Ultrasonography= Ultrasonography_List.getSelectedIndex();
        int n;
        /*int p200=200;
        int p600=600;
        int p400=400;
        int p700=700;
        int p800=800;
        int p900=900;
        int p1000=1000;
        int p1200=1200;
        int p2000=2000;*/
     switch (index_of_Ultrasonography) {
         case 0: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 1: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 2: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 3: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 4: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 5: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 6:   n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 7: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);;
             break;
         case 8: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 9: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 10: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 11: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 12: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 13: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 14: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 15: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 16: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 17: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 18: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 19: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 20: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 21: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 22: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 23: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 24: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 25: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 26: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 27: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 28: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 29: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 30: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 31: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 32: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 33: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 34: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 35: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 36: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n); break;
         default:
             break;
     }}
     else{
             int index_of_Radiography= Radiography_List.getSelectedIndex();
         /*int a3=300;
         int a5=500;
         int a4=400;
         int a15=1500;
         int a20=2000;
         */
         int n;
             switch (index_of_Radiography)
             {
         case 0:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 1:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 2:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 3:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 4:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 5:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 6:    n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 7:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 8:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 9:
   n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);            break;
         case 10:
   n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);            break;
         case 11:
   n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);            break;
         case 12:
   n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);            break;
         case 13:
                   n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);            break;
         case 14:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 15:  n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 16:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 17:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 18:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 19:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 20:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 21:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 22:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 23:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 24:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 25:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 26:
               n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);break;
         case 27: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 28: n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 29:
              n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 30:
              n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 31:
              n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 32:
              n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 33:
          n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 34:
              n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 35:
            n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         case 36:
            n=  Integer.parseInt(JOptionPane.showInputDialog("Enter Price"));
             pst.setInt(11,n);
             break;
         default:
             break;
             
             }
             ///X-RAy List Code Here
             }   
             
                  
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             boolean rs=pst.execute();
   if((rs==false))
           {
       JOptionPane.showMessageDialog(null,"Data stored");
       this.reset();
            
   }
   else
   {
       JOptionPane.showMessageDialog(null,"Data not Stored");
   } 
     
  
   
       } }catch(NumberFormatException e)
                   {
                   JOptionPane.showMessageDialog(null,"Enter Age and Contact no in Digits");
                    } catch (SQLException ex) {
         Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
     }
                  
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
Doctor_Registration.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
Home_Page hp=new Home_Page();
hp.setVisible(true);
this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Gender_ComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gender_ComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Gender_ComboboxActionPerformed

    private void Contact_No_TextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Contact_No_TextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_No_TextboxActionPerformed

    private void Date_TextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_TextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Date_TextboxActionPerformed

    private void Patient_Name_TextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Patient_Name_TextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Patient_Name_TextboxActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String Username="root";
        String password="root123";
        String q = "Insert into doctor(Doctor_Name)values(?)";
        String url = "jdbc:mysql://localhost:3306/lab";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(url,Username,password);
            PreparedStatement pst=con.prepareStatement(q);
            pst.setString(1,jTextField1.getText());
            boolean rs=pst.execute();
            if((rs==false))
            {
                JOptionPane.showMessageDialog(null,"Doctor Add Successfully");
                        

            Refered_Combobox.removeAllItems();   
  
             q = "Select Doctor_Name from doctor";
          
              Class.forName("com.mysql.cj.jdbc.Driver");
   //  Connection con=DriverManager.getConnection(url,Username,password);
        
     PreparedStatement st12=con.prepareStatement(q);        

       ResultSet rs2= st12.executeQuery();
       tab.setModel(DbUtils.resultSetToTableModel(rs2));
  
            }
            
            
            

                     
            else
            {
                JOptionPane.showMessageDialog(null,"Failed");
         
            
            
            }

        }catch(HeadlessException | ClassNotFoundException | NumberFormatException | SQLException e)
        {
            System.out.println(e);

        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn=DriverManager.getConnection(url,Username,password);

            String  q1="select Doctor_Name from doctor";
            PreparedStatement pst1=null;
            pst1 =conn.prepareStatement(q1);
            ResultSet rs1=pst1.executeQuery();
                   while(rs1.next())     {
                Refered_Combobox.addItem(rs1.getString("Doctor_Name"));
            }
        }catch(ClassNotFoundException | SQLException e)
        {
            System.out.println(e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
jFrame1.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
DefaultTableModel model = (DefaultTableModel)tab.getModel();

        // get the selected row index
      
           int selectedRowIndex = tab.getSelectedRow();
      
           
        // set the selected row data into jtextfields
      String n=model.getValueAt(selectedRowIndex,0 ).toString();
      System.out.println(n);
          
           //  String b=te.getText();
       String u = "Update doctor set Doctor_Name='"+m.getText()+"' where Doctor_Name='"+n+"'";      
       
       //System.out.println(a);              
             // q = "Update patient set "+cbb.getSelectedItem().toString()+"='"+b+"'";
     
             String Username="root";
             String password="root123";
             String url = "jdbc:mysql://localhost:3306/lab";
          try{
              Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con=DriverManager.getConnection(url,Username,password);
        PreparedStatement pst=con.prepareStatement(u);
       boolean b= pst.execute();
                       if(b==false)
                       {
                        JOptionPane.showMessageDialog(null,"Modifyed Successfully");
      
                        
                        String q;
        
                 // String Username="root";
                   q = "Select Doctor_Name from doctor";
          try{
              Class.forName("com.mysql.cj.jdbc.Driver");
     //   Connection con=DriverManager.getConnection(url,Username,password);
        PreparedStatement pst1=con.prepareStatement(q);        
//String u="Ultrasonography";
      // pst.setString(1,t1.getText());
       //pst.setString(2, t2.getText());
       // pst.setString(3,u);
       ResultSet rs1= pst1.executeQuery();
       tab.setModel(DbUtils.resultSetToTableModel(rs1));
    
       
                
          }catch(   ClassNotFoundException | SQLException e){
          
          System.out.println(e);
          }
             
     
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn=DriverManager.getConnection(url,Username,password);

            String  q1="select Doctor_Name from doctor";
            PreparedStatement pst1=null;
            pst1 =conn.prepareStatement(q1);
            ResultSet rs1=pst1.executeQuery();
                   while(rs1.next())     {
                Refered_Combobox.addItem(rs1.getString("Doctor_Name"));
            }
        }catch(ClassNotFoundException | SQLException e)
        {
            System.out.println(e);
        }
                       }
                       else
                       {
                        JOptionPane.showMessageDialog(null,"Operation Unsuccessfully");
                           
                       }
          }catch(   ClassNotFoundException | SQLException e){
          
          System.out.println(e);

               }    


                  // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

DefaultTableModel model = (DefaultTableModel)tab.getModel();

        // get the selected row index
      
           int selectedRowIndex = tab.getSelectedRow();
          String url = "jdbc:mysql://localhost:3306/lab";
         
           
        // set the selected row data into jtextfields
      String n=model.getValueAt(selectedRowIndex,0 ).toString();
      System.out.println(n);
try{
    String Username="root";
    String password="root123";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn=DriverManager.getConnection(url,Username,password);

            String  q1="Delete  from doctor where Doctor_Name='"+n+"'";
            PreparedStatement pst1=null;
            pst1 =conn.prepareStatement(q1);
         //  pst1.executeUpdate();
     boolean b= pst1.execute();
                       if(b==false)
                       {
                        JOptionPane.showMessageDialog(null,"Deleted successfully");
                                     String q;
        
                 // String Username="root";
                   q = "Select Doctor_Name from doctor";
          
              Class.forName("com.mysql.cj.jdbc.Driver");
     Connection con=DriverManager.getConnection(url,Username,password);
        
     PreparedStatement st12=con.prepareStatement(q);        

       ResultSet rs2= st12.executeQuery();
       tab.setModel(DbUtils.resultSetToTableModel(rs2));
      String  q2="select Doctor_Name from doctor";
            PreparedStatement pst3=null;
            pst3 =conn.prepareStatement(q2);
            ResultSet rs3=pst3.executeQuery();
                   while(rs3.next())     {
                Refered_Combobox.addItem(rs3.getString("Doctor_Name"));
           
                       }}
                       else
                       {
                        JOptionPane.showMessageDialog(null,"Operattion Unsuccessfully");
                           
                       }
      
}catch(Exception e)
{
    System.out.println(e);
            
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Age_Textbox;
    private javax.swing.JTextField City_Textbox;
    private javax.swing.JTextField Contact_No_Textbox;
    private javax.swing.JFormattedTextField Date_Textbox;
    public javax.swing.JFrame Doctor_Registration;
    private javax.swing.JComboBox<String> Gender_Combobox;
    private javax.swing.JTextField Patient_Name_Textbox;
    private javax.swing.JList<String> Radiography_List;
    public javax.swing.JComboBox<String> Refered_Combobox;
    private javax.swing.JList<String> Ultrasonography_List;
    private javax.swing.JCheckBox c1;
    private javax.swing.JCheckBox c2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField m;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables

    
}
